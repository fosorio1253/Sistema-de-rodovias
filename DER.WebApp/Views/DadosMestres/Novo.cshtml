@model DER.WebApp.ViewModels.DadoMestreTabelaViewModel
@{
    ViewBag.Title = "SGFD - Cadastro de item";
    var permissao = (DER.WebApp.ViewModels.PermissoesViewModel)ViewBag.Permissoes;
}

<section class="content">
    <section class="content-header">
        <div>
            <h1>@Model.nome_tabela</h1>
            @if (permissao.Criar)
            {
                <button type="button" class="btn btn-primary" onclick="NovaLinha('@Model.sigla')" id="btnSalvar">
                    <i class="fa fa-save"></i>
                    <span>Novo</span>
                </button>
            }
            <a href="/DadosMestres/List" class="btn btn-primary">
                <i class="fa fa-arrow-left"></i>
                <span>Voltar</span>
            </a>
        </div>

        <ol class="breadcrumb">
            <li><i class="fa fa-home"></i><a href="/Home/Index"> Home </a></li>
            <li><a href="/DadosMestres/List">Listar Grupo de Acesso </a></li>
            <li class="active"><a> Cadastro </a></li>
        </ol>
    </section>
    <section class="jumbotron">
        @using (Html.BeginForm("Salvar", "DadosMestres", FormMethod.Post, new { id = "dadosMestres" }))
        {
            @Html.Hidden("hdnColunas", String.Join(",", Model.valores[0].Select(x => "{\"nome\": \"" + x.nome_coluna + "\"}")))
            @Html.Hidden("hdnTabela", Model.sigla)
            <div class="container">
                <div class="list">
                    <table class="table">
                        <thead>
                            <tr>
                                @foreach (var colunas in Model.valores[0])
                                {
                                    <th scope="col">@colunas.nome_coluna <i class="fa fa-sort"></i></th>
                                    if (colunas.Equals(Model.valores[0].Last()))
                                    {
                                        <th class="ultimaColuna" scope="col" style="width:20%">Opções</th>
                                    }
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var linha in Model.valores)
                            {
                                <tr class="linhaTables">
                                    @foreach (var coluna in linha)
                                    {
                                        <td>@coluna.valor</td>

                                        if (coluna.Equals(linha.Last()))
                                        {
                                            <td class="ultimaColuna">
                                                <button type="button" onclick="Editar('@Model.sigla', '@linha[0].valor')" @(permissao.Editar) class="btn btn-link"><i class="fa fa-pencil"></i></button>
                                                <button type="button" onclick="Excluir('@linha[0].valor')" @(permissao.Excluir) class="btn btn-link"><i class="fa fa-trash"></i></button>
                                            </td>
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }
    </section>
</section>
<div class="modal fade" id="modalFormulario" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content" style="margin-left:150px; width:550px;">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h3 class="modal-title text-center"><b data-title=""></b></h3>
            </div>
            <form>
                <br />
                <div class="modal-body form-group form-body">
                </div>
                <div class="modal-footer">
                    <div class="col-md-3 col-md-offset-4">
                        <button type="button" id="btnSenha" name="btnSenha" onclick="Salvar()" class="btn btn-primary btn-block btn-flat"> Salvar</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script src="~/Content/js/jquery-3.4.1.min.js"></script>
<script src="~/Content/plugins/jquery.mask.js"></script>
<script src="~/Scripts/Base.js"></script>

<script>
    function NovaLinha(tabela) {
        geraForm(tabela, null)
    }

    function Salvar() {
        var errospan = false;
        var Valores = [];




        $('.form-body [data-input]').each((i, e) => {


            var valor = {};
            valor.id = $(e).attr("name");
            valor.valor = $(e).val();
            valor.linha = $('#hdnLinha').val();
            valor.colunaId = $(e).attr('data-coluna');


            if (valor.colunaId == 11 && valor.valor.length < 7) {
                $("#spanerro" + valor.colunaId).text("Data inválida!");
                errospan = true;
            }
            else if (valor.valor != null && valor.valor != undefined && valor.valor != " " && valor.valor != "") {
                Valores.push(valor);
                $("#spanerro" + valor.colunaId).text("");
            }
            else {
                $("#spanerro" + valor.colunaId).text("Campo Obrigatório!");
                errospan = true;
            }

        });

        if (errospan) {
            return;
        }

        data = {};
        data.Valores = Valores;
        data.TabelaId = $('#hdnTabela').val()

        var dados = []
        
        for (var i = 0; i < data.Valores.length; i++) {
            var xx = { "valor": data.Valores[i]["valor"], "nome_coluna": data.Valores[i]["colunaId"] } 
            dados.push(xx);
        }

        console.log(data.Valores)
        console.log(dados)

        var response = POST('/DadosMestres/Salvar', JSON.stringify({ nome_tabela: data.TabelaId, sigla: data.TabelaId, valores: [dados] }))

        if (response.status == true) {
            swal({
                type: 'success',
                title: 'Sucesso',
                text: 'Dado salvo com sucesso!'
            }).then((result) => {
                if (result.value) {
                    window.location.reload()
                }
            })
        }
    }

    function Editar(tabela, linha) {

        console.log({ tabela: tabela, linha: linha })
        geraForm(tabela, linha);
    }

    function geraForm(tabela, linha) {
        var json = JSON.parse("[" + $('#hdnColunas').val() + "]");

        
        inputs = [];
        $('.form-body').html("");
        $('.form-body').append($('<input/>', { type: 'text', value: tabela, hidden: true, id: 'hdnTabela' }));
        $('.form-body').append($('<input/>', { type: 'text', value: linha, hidden: true, id: 'hdnLinha' }));

        console.log(json)
        json.forEach((e, i) => {


            var div = "";

            div = $('<div>', { class: "form-group row" }).append(
                $('<label>', { class: 'col-sm-4 col-form-label', html: e.nome }),
                $('<div>', { class: 'col-sm-8' }).append(
                    $('<input>', { required: 'true', 'data-coluna': e.nome, class: 'form-control', 'data-input': '', maxlength: 100 }),
                    $('<span>', { id: 'spanerro' + e.id, style: "color:red" })
                )
            );

            $('.form-body').append(div)
            
        });

        $('#11').mask('00/0000', { 'translation': { 0: { pattern: /[0-9]/ } } })
        $('#modalFormulario').modal();
    }

    function validarData(campo) {

        if (campo.value.length >= 7 && !/(0[1-9]|1[0-2])[/](1[9]{1}|2[0-9])([0-9]{2})/.test(campo.value)) {

            $("#spanerro" + campo.id).text("Digite uma data válida!");

            $('#' + campo.id).val('');
        }
        else {

            $("#spanerro" + campo.id).text("");
        }
    };

    //Chamar essa função na tag input: onkeyup=“moeda(this);”
    function moeda(z) {
        v = z.value;
        v = v.replace(/\D/g, "") // permite digitar apenas numero
        v = v.replace(/(\d{1})(\d{14})$/, "$1.$2") // coloca ponto antes dos ultimos digitos
        v = v.replace(/(\d{1})(\d{11})$/, "$1.$2") // coloca ponto antes dos ultimos 11 digitos
        v = v.replace(/(\d{1})(\d{8})$/, "$1.$2") // coloca ponto antes dos ultimos 8 digitos
        v = v.replace(/(\d{1})(\d{5})$/, "$1.$2") // coloca ponto antes dos ultimos 5 digitos
        v = v.replace(/(\d{1})(\d{1,2})$/, "$1,$2") // coloca virgula antes dos ultimos 2 digitos
        z.value = v;
    }


    function Excluir(id) {

        swal({
            title: 'Exclusão',
            text: "Deseja realmente excluir o dado?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            cancelButtonText: 'Não',
            confirmButtonText: 'Sim'
        }).then((result) => {
            if (result.value) {
                var response = POST("/DadosMestres/Excluir", JSON.stringify({ tabelaId: $('#hdnTabela').val(), id: id }));
                if (response.status == true) {
                    swal({
                        type: 'success',
                        title: 'Sucesso',
                        text: 'Dado excluído com sucesso!'
                    }).then((result) => {
                        if (result.value) {
                            $('[data-id=' + id + ']').parent().remove()
                        }
                    })

                }
            }
        });
    }

</script>

<script>
@section Ready{
    if ($(location).attr("href").toLocaleLowerCase().indexOf('visualizar') > 0) {
        $('#btnSalvar').addClass("hide");
        $('.ultimaColuna').remove()
    }
}
</script>